name: publish

on:
  release:
    types: [published]

jobs:
  update-app-version:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Package Version Change
        uses: iamthenoah/gh-action-update-json@v4
        with:
          branch: master
          message: 'New release version: %v'
          file: package.json
          key: version
          value: ${{ github.event.release.tag_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  clear-update-bucket:
    needs: update-app-version
    runs-on: ubuntu-latest

    steps:
      - name: Clear Bucket
        run: |
          aws s3 rm s3://react-electron-app-release --recursive --endpoint-url $AWS_BUCKET_ENDPOINT
        env:
          AWS_BUCKET_ENDPOINT: ${{ secrets.AWS_BUCKET_ENDPOINT }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  release-app-build:
    needs: clear-update-bucket

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    permissions:
      contents: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: master

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm ci

      - name: Package Application
        run: npm run package
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          
      - name: Upload dist to Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*.*
          append_body: true
          token: ${{ secrets.GITHUB_TOKEN }}

  rollback-version:
    needs: release-app-build
    if: ${{ always() && needs.release-app-build.result == 'failure' }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - run: git revert --no-edit HEAD
      - run: git push origin master
